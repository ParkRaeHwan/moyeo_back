name: server-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 프로젝트 build
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: AWS 인증 설정
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker 이미지 빌드, ECR PUSH
        run: |
          REGION="ap-northeast-2"
          ECR_REPOSITORY="moyeo"
          IMAGE_TAG="latest"
          
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: compose.yml EC2로 전송
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/app"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: EC2 배포
        uses: appleboy/ssh-action@v1.0.3
        env:
          ENV: ${{ secrets.ENV }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: ENV, AWS_ACCOUNT_ID
          script_stop: true
          script: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID".dkr.ecr.ap-northeast-2.amazonaws.com
            
            cd /home/ubuntu/app
            rm -rf .env
            echo "$ENV" > .env 
            docker compose down
            docker compose pull
            docker compose up -d --build
